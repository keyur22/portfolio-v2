{"version":3,"sources":["projectDetails/smartbrain.png","projectDetails/robofriends.png","projectDetails/budget.png","components/Navigation/Navigation.js","components/SocialIcon/SocialIcon.js","components/Home/Home.js","components/About/About.js","components/ProjectModal/ProjectModal.js","components/ProjectCard/ProjectCard.js","projectDetails/projectDetails.js","components/Project/Project.js","components/Skills/Skills.js","App.js","serviceWorker.js","index.js","components/Home/avatar-1.png","components/About/profile.jpg"],"names":["module","exports","Navigation","Navbar","collapseOnSelect","expand","className","variant","Brand","Toggle","aria-controls","Collapse","id","Nav","exact","to","Link","SocialIcon","href","target","rel","icon","faGithub","faLinkedinIn","faEnvelope","skills","Home","str","join","Container","Row","Col","xs","md","Image","src","profile","Jumbotron","fluid","About","style","lineHeight","ProjectModal","props","data","Modal","size","aria-labelledby","centered","Body","name","img","alt","description","map","des","i","key","tech","Footer","Button","website","github","onClick","onHide","ProjectCard","React","useState","modalShow","setModalShow","xl","Card","Img","Text","excerpt","show","projectDetails","require","Project","project","iconNames","Skills","App","basename","process","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e1cc874.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/smartbrain.5b63644a.png\";","module.exports = __webpack_public_path__ + \"static/media/robofriends.1f5de0c4.png\";","module.exports = __webpack_public_path__ + \"static/media/budget.0f275b45.png\";","import React from 'react';\nimport './Navigation.css'\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst Navigation = () => {\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" className=\"py-3 px-md-5\" variant=\"dark\">\n            <Navbar.Brand className=\"font-weight-bold text-uppercase text-white\">Keyur Chaudhari</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"ml-auto mt-3 mt-md-0\">\n                    <LinkContainer exact to=\"/\" className=\"text-white mx-4 text-uppercase font-weight-bold text-center\">\n                        <Nav.Link>Home</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/about\" className=\"text-white mx-4 text-uppercase font-weight-bold text-center\">\n                        <Nav.Link>About</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/skills\" className=\"text-white mx-4 text-uppercase font-weight-bold text-center\">\n                        <Nav.Link>Skills</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/projects\" className=\"text-white mx-4 text-uppercase font-weight-bold text-center\">\n                        <Nav.Link>Projects</Nav.Link>\n                    </LinkContainer>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faLinkedinIn } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\n\nimport './SocialIcon.css';\n\nconst SocialIcon = () => {\n    return (\n        <div\n            className=\"social-icons d-flex flex-wrap justify-content-center align-items-center pt-md-4\">\n            <a href=\"https://github.com/keyur22\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faGithub} className=\"icon m-2\" />\n            </a>\n            <a href=\"https://www.linkedin.com/in/keyur-chaudhari-018257117/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faLinkedinIn} className=\"icon m-2\" />\n            </a>\n            <a href=\"mailto:keyurchaudhari4@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <FontAwesomeIcon icon={faEnvelope} className=\"icon m-2\" />\n            </a>\n        </div>\n    );\n};\n\nexport default SocialIcon;","import React from 'react';\nimport { Container, Row, Col, Image, Jumbotron } from 'react-bootstrap';\nimport profile from './avatar-1.png';\nimport './Home.css';\nimport SocialIcon from '../SocialIcon/SocialIcon';\n\nconst skills = ['HTML / CSS', 'Bootstrap / SCSS', 'JavaScript', 'React', 'NodeJS', 'ExpressJS', 'PostgreSql'];\n\nfunction Home() {\n    let str = skills.join(' | ');\n    return (\n        <Container className=\"mt-3 mt-md-5 home-section\">\n            <Row>\n                <Col xs={6} md={2} className=\"mx-auto\">\n                    <Image src={profile} className=\"img-fluid\" />\n                </Col>\n                <Col xs={12} className=\"mx-auto mt-4 mt-md-5\">\n                    <Jumbotron fluid className=\"bg-dark text-light py-4 border border-dark rounded\">\n                        <Container className=\"text-center\">\n                            <h2 className=\"font-weight-bold mb-4\">Full Stack Developer</h2>\n                            <hr />\n                            <p className=\"my-4\">{str}</p>\n                            <SocialIcon />\n                        </Container>\n                    </Jumbotron>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport profile from './profile.jpg';\nimport SocialIcon from '../SocialIcon/SocialIcon';\n\nconst About = () => {\n    return (\n        <Container className=\"mt-2 mt-md-5 mb-2 centerContainer\">\n            <div className=\"bg-dark p-3 p-md-4 border rounded border-dark\">\n                <Row>\n                    <Col xs={12}>\n                        <h2 className=\"text-center mb-5 text-light\">\n                            Who am I?\n                        </h2>\n                    </Col>\n                    <Col xs={10} md={3} className=\"mx-auto text-center\">\n                        <Image src={profile} className=\"img-fluid rounded-circle mb-4 mb-md-1 w-75\" />\n                        <SocialIcon />\n                    </Col>\n                    <Col xs={12} md={8} className=\"mx-auto text-light mt-4 mt-md-2\">\n                        <p style={{ lineHeight: 1.8 }}>\n                            Hi, I'm Keyur. I am a Full Stack Developer with 1+ years of experience in HTML5, CSS3, SCSS, Bootstrap, Jquery, PHP, and Wordpress. I also have quite good knowledge in Javascript/ ES6/ OOP ? Async, React, Redux, NodeJS, ExpressJS and PostgreSQL. I am currently seeking to establish a career as a Full Stack Developer.</p>\n                        <p style={{ lineHeight: 1.8 }}>\n                            When I am not coding, you can find me in the gym. My hobbies are listening to music, reading, watching movies/TV series and playing cricket.\n                        </p>\n                    </Col>\n                </Row>\n            </div>\n        </Container>\n    );\n};\n\nexport default About;","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst ProjectModal = props => {\n    const data = props.data;\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Body>\n                <p className=\"text-center text-uppercase font-weight-bold\">\n                    {data.name}\n                </p>\n                <img className=\"img-fluid\" src={data.img} alt=\"project img\"></img>\n                <div className=\"mt-4\">\n                    {\n                        data.description.map((des, i) => {\n                            return <p key={i}>{des}</p>\n                        })\n                    }\n                </div>\n                <p>\n                    <span className=\"font-weight-bold\">Technologies Used: </span>\n                    {data.tech}\n                </p>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"dark\" href={data.website} target=\"blank\">Demo</Button>\n                <Button variant=\"dark\" href={data.github} target=\"blank\">Github</Button>\n                <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n};\n\nexport default ProjectModal;","import React from 'react';\nimport { Card, Col } from 'react-bootstrap';\nimport ProjectModal from '../ProjectModal/ProjectModal';\n\nconst ProjectCard = ({ data }) => {\n    const [modalShow, setModalShow] = React.useState(false);\n    return (\n        <Col xs={12} md={6} xl={4} className=\"mx-auto d-flex\">\n            <Card className=\"border rounded border-dark shadow-lg mb-5\" onClick={() => setModalShow(true)}>\n                <Card.Img variant=\"top\" src={data.img} />\n                <Card.Body>\n                    <p className=\"text-center font-weight-bold text-uppercase\">{data.name}</p>\n                    <Card.Text>\n                        {data.excerpt};\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n            <ProjectModal\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                data={data}\n            />\n        </Col>\n    )\n}\n\nexport default ProjectCard;","const projectDetails = [\n    {\n        id: 0,\n        name: \"Smartbrain Face Detection\",\n        img: require('./smartbrain.png'),\n        excerpt: \"This web application allows the user to detect faces in the image uploaded by them. It makes use of Clarifai face detection API\",\n        description: [\n            \"This web application allows the user to detect faces in the image uploaded by them. It makes use of Clarifai face detection API.\",\n            \"Users can register and upload the image. An entry count is maintained for every user which indicates how many times the user has detected faces.\",\n            \"Front End of the app is created using React. NodeJS, ExpressJS is used for server side scripting. PostgreSql is used to store user information.\",\n            \"External Libraries like Bcrypt and KnexJS are also used.\",\n            \"The app is deployed on heroku along with the server and database.\"\n        ],\n        tech: \"HTML5, CSS3, JS, React, NodeJS, ExpressJS, postgreSQL\",\n        website: \"https://smartbrain-face-detection.herokuapp.com/\",\n        github: \"https://github.com/keyur22/smartbrain-face-detection\"\n    },\n    {\n        id: 1,\n        name: \"Robofriends\",\n        img: require('./robofriends.png'),\n        excerpt: \"This app allows the user to search his friend by name from a collection of robofriends\",\n        description: [\n            \"This app allows the user to search his friend by name from a collection of robofriends.\",\n            \"JSONPlaceholder API is used to get user data.\",\n            \"Robohash Web service is used to create robot avatars of users.\"\n        ],\n        tech: \"HTML5, CSS3, JS, React, Redux, Redux-Thunk\",\n        website: \"https://keyur22.github.io/robofriends-v2/\",\n        github: \"https://github.com/keyur22/robofriends-v2\"\n    },\n    {\n        id: 2,\n        name: \"Budget App\",\n        img: require('./budget.png'),\n        excerpt: \"A budget app to track income and expenses for the current month\",\n        description: [\n            \"This application allows users to track their incomes and expenses for the current month.\",\n            \"ES5 Javascript was used to implement OOP in the application.\",\n            \"It makes use of modular pattern. It is divided into independent modules working together thus achieving the purpose of Object Oriented Programming in JS.\"\n        ],\n        tech: \"HTML5, CSS3, JS, Bootstrap\",\n        website: \"https://keyur22.github.io/budget-app/\",\n        github: \"https://github.com/keyur22/budget-app\"\n    }\n];\n\nexport default projectDetails;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './Project.css';\nimport ProjectCard from '../ProjectCard/ProjectCard';\nimport projectDetails from '../../projectDetails/projectDetails';\n\nconst Project = () => {\n    return (\n        <Container className=\"projects-section pt-5 centerContainer\">\n            <Row>\n                <Col xs={12} className=\"mx-auto\">\n                    <h2 className=\"text-center mb-5 text-light\">\n                        Some of my projects\n                    </h2>\n                </Col>\n                {\n                    projectDetails.map(project => {\n                        return <ProjectCard key={project.id} data={project} />\n                    })\n                }\n            </Row>\n        </Container>\n    );\n};\n\nexport default Project;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './Skills.css';\n\nconst iconNames = ['html5', 'css3', 'javascript', 'bootstrap', 'react', 'nodejs', 'express', 'postgresql', 'jquery', 'php', 'wordpress'];\n\nconst Skills = () => {\n    return (\n        <Container className=\"pt-5 centerContainer mb-2\">\n            <div className=\"bg-dark p-3 p-md-4 border rounded border-dark w-100\">\n                <Row>\n                    <Col xs={12} className=\"mx-auto\">\n                        <h2 className=\"text-center text-light\">\n                            Technologies I have coded in...\n                        </h2>\n                    </Col>\n                    <Col xs={12} className=\"mx-auto tech-container mt-5\">\n                        {\n                            iconNames.map((icon, i) => {\n                                if (icon === 'express') {\n                                    return <i key={i} className={`devicon-${icon}-original-wordmark icon mx-2 my-3`}></i>\n                                } else {\n                                    return <i key={i} className={`devicon-${icon}-plain icon mx-2 my-3`}></i>\n                                }\n                            })\n                        }\n                    </Col>\n                </Row>\n            </div>\n        </Container>\n    )\n};\n\nexport default Skills;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Navigation from './components/Navigation/Navigation';\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Project from './components/Project/Project';\nimport Skills from './components/Skills/Skills';\n\nconst App = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navigation />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/projects\" component={Project} />\n        <Route exact path=\"/skills\" component={Skills} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar-1.1aa927a1.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.b17afdee.jpg\";"],"sourceRoot":""}